# -*- coding: utf-8 -*-
"""ITCS4122Project1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HiL5gBw2mZ_606rY8bPMfvmnFN8UXI4h

The dataset is titled “F1 Drivers dataset” and it is from Kaggle. The data set has 22 columns and contains information about over 800 F1 drivers that give various information about each driver, derived from the F1 archives. The variables are a mix of numerical, categorical, and string values.
Preprocessing/cleaning data: There are no missing values in the dataset making the pre-processing much easier to figure out. However I went ahead and made a  check as follows:
race_df_clean = race_df.dropna()
print (race_df_clean)
"""

!pip install pandas
!pip install numpy
!pip install matplotlib
!pip install seaborn

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

race_df = pd.read_csv('F1Drivers_Dataset.csv')
race_df

race_df_clean = race_df.dropna()
print (race_df_clean)

country_org = race_df_clean.groupby('Nationality').mean(numeric_only=True)
country_org

country_counts = race_df["Nationality"].value_counts()
valid_countries = country_counts[country_counts >= 5].index
race_df_filtered = race_df[race_df["Nationality"].isin(valid_countries)]

plt.figure(figsize=(14,8))
sns.boxplot(
    data = race_df_filtered,
    x = 'Nationality',
    y = 'Win_Rate',
    hue='Nationality',
    dodge=False,
    legend=False,
    palette = "pastel"
)
plt.title("Distribution of F1 Driver Win Rates by Country", fontsize=16)
plt.xlabel("Country", fontsize=12)
plt.ylabel("Win Rate", fontsize=12)
plt.xticks(rotation=45,fontsize=12)
plt.show()

"""I used a boxplot to visualize the distribution of F1 driver win rates by country. A boxplot was chosen over a bar chart or line chart because it effectively shows both the central tendency and variability within each country’s drivers, rather than just an average or total. Bar charts or line charts would only display summary statistics (like mean win rate) and would hide important details such as the range of win rates and outliers.
The dataset was filtered to include only countries with at least 5 drivers, ensuring that each box represents a meaningful sample size.
Overall, this visualization allows for quick comparisons of median win rates, spread, and outliers between countries, providing a richer understanding of which countries are providing drivers that are outliers and consistent performers.
"""

decade_avg = race_df.groupby("Decade")["Win_Rate"].mean().reset_index()

top_countries = race_df["Nationality"].value_counts().nlargest(5).index

race_df["Country_Group"] = race_df["Nationality"].where(race_df["Nationality"].isin(top_countries),"Other")

race_df["Entry_Size"] = np.log1p(race_df["Race_Entries"]) * 15

plt.figure(figsize=(14,8))
sns.scatterplot(
    data=race_df,
    x="Decade",
    y="Win_Rate",
    hue="Country_Group",
    size="Entry_Size",
    sizes=(30,400),
    alpha=0.9,
    palette="Set1",
    legend="brief"
)

sns.lineplot(
    data=decade_avg,
    x="Decade",
    y="Win_Rate",
    color="red",
    linewidth=2.5,
    marker = "o",
    label = "Decade Avg"
)
plt.title("F1 Driver Win Rates Over Time (with Decade Averages)", fontsize=16)
plt.xlabel("Decade", fontsize = 12)
plt.ylabel("Win Rate", fontsize = 12)
plt.legend(title="Country / Avg", bbox_to_anchor=(1.05,1), loc="upper left")
plt.grid(alpha=0.3)
plt.show()

"""I used a scatter plot combined with a line plot to examine how F1 drivers from
different countries win rates have changed over time. The scatter plot was chosen instead of a bar or line chart alone because it allows us to visualize individual drivers, showing both their win rates and the size of their careers.
To prevent extreme values from dominating, I used a logarithmic scale (np.log1p) making larger and more experienced careers larger plots on the graph.
The red line plot overlays the average win rate per decade, providing a reference for the overall trend over time. This combination of scatter and line plots allows us to see both individual performance and aggregate trends, which would be difficult with a single chart type.
"""

df_corr = race_df[["Pole_Positions", "Race_Wins"]].dropna()
pearson_corr= df_corr["Pole_Positions"].corr(df_corr["Race_Wins"], method="pearson")
spearman_corr = df_corr["Pole_Positions"].corr(df_corr["Race_Wins"], method="spearman")

print(f"Pearson correlation: {pearson_corr:.3f}")
print(f"Spearman correlation: {spearman_corr}:.3f")

plt.figure(figsize=(8,6))
sns.regplot(
    data=df_corr,
    x="Pole_Positions",
    y="Race_Wins",
    scatter_kws={"alpha":0.6},
    line_kws={"color":"red", "linewidth":2.5}
)
plt.title("Correlation between Pole Positions and Race Wins (per Driver)")
plt.xlabel("Pole Positions")
plt.ylabel("Race Wins")
plt.show()

"""For this analysis, I used a scatter plot with a regression line to explore the relationship between pole positions and race wins for F1 drivers. The X-axis (Pole Positions): Represents the number of times a driver started from pole position, a strong indicator of qualifying performance. The Y-axis (Race Wins): Represents career race wins, the outcome we are trying to understand.The regression line (in red) shows the general trend and helps visualize the linear relationship between pole positions and race wins. By overlaying the line on the scatter, we can immediately see whether more pole positions tend to correspond to more wins. I calculated both the Pearson correlation (measuring linear correlation) and Spearman correlation (measuring monotonic correlation), which quantify the strength of the relationship. This provides numerical context alongside the visual trend.

"""

top_25 = race_df["Nationality"].value_counts().nlargest(25).index
race_df["Nationality_Simplified"] = race_df["Nationality"].where(
    race_df["Nationality"].isin(top_25), "Other"
)

winners = {
    "Lewis Hamilton": {"color": "gold", "marker": "*"},
    "Micheal Shumacher": {"color": "red", "marker": "D"},
    "Sebastian Vettel": {"color": "green", "marker": "s"},
    "Ayrton Senna": {"color": "blue", "marker": "^"},
    "Alain Prost": {"color": "purple", "marker": "X"},
    "Max Verstappen": {"color": "orange", "marker": "o"}
}
plt.figure(figsize=(12,7))

sns.scatterplot(
    data=race_df,
    x="Years_Active",
    y="Race_Wins",
    hue="Nationality_Simplified",
    s=100,
    alpha=0.7,
    edgecolor="black",
    linewidth=0.6,
    palette="tab20"
)

sns.regplot(
    data=race_df,
    x="Years_Active",
    y="Race_Wins",
    scatter=False,
    color="red",
    line_kws={"linewidth": 2}
)

for driver, style in winners.items():
    d = race_df[race_df["Driver"] == driver]
    plt.scatter(
        d["Years_Active"],
        d["Race_Wins"],
        s=300,
        color=style["color"],
        edgecolor="black",
        linewidth=1.2,
        marker=style["marker"],
        zorder=5,
        label=driver
    )

    for _, row in d.iterrows():
        plt.annotate(
            row["Driver"],
            (row["Years_Active"], row["Race_Wins"]),
            xytext=(10,10),
            textcoords="offset points",
            fontsize=10,
            color="black",
            weight="bold",
            arrowprops=dict(arrowstyle="->", color="black", lw=1)
        )
plt.title("Career Length (Years Active) vs Total Race Wins per Driver", fontsize=16)
plt.xlabel("Years Active (Seasons)", fontsize=12)
plt.ylabel("Total Race Wins", fontsize=12)
plt.legend(bbox_to_anchor=(1.05,1), loc="upper left", title="Nationality / Winners")
plt.grid(alpha=0.3)
plt.tight_layout()
plt.show()
corr = race_df["Years_Active"].corr(race_df["Race_Wins"])
print(f"Correlation between career length and wins: {corr:.3f}")

"""I used a scatter plot with a regression line and highlighted points to explore the relationship between career length and total race wins for F1 drivers. A scatter plot was chosen over a bar or line chart because it allows us to visualize individual drivers, their performance, and the variation across different nationalities. The legend groups the top 25 nationalities individually and labeling the rest as “Other” to reduce clutter and make the plot more readable. The regression line shows the general trend between career length and wins, making it easier to see whether longer careers correlate with more wins. I also highlighted notable outliers or winners such as Lewis Hamilton and Michael Schumacher with distinct marker shapes and colors to draw attention to exceptional careers. Annotating these drivers adds clarity, showing which points correspond to famous or high-achieving individuals. I calculated the Pearson correlation to quantify the strength of the relationship between career length and wins, complementing the visual interpretation.

My initial struggle was finding the right way to display what information I wanted to communicate. I found that the intital bar chart I made during my first draft was not an effective way to communicate information about each driver. If I could change something I would try and find graphs that are not necessarily scatterplots and work with more complex visuals to tell my story.
"""